{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL } from \"../constants/productConstants\";\nimport Axios from \"axios\";\nimport { PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_SUCCESS } from './../constants/productConstants';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/products/\" + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };","map":{"version":3,"sources":["D:/HOC/Nam4-KH1/CongNghePhanMemMoi/GitHub/CNPMM_WEBBANHANG/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","Axios","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_SUCCESS","listProducts","dispatch","type","data","axios","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","detailsProduct","productId","deleteProduct","delete","Authorization","success"],"mappings":"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","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n     PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL } from \"../constants/productConstants\"\r\nimport Axios from \"axios\";\r\nimport { PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_SUCCESS } from './../constants/productConstants';\r\nconst listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST});\r\n        const {data} = await axios.get(\"/api/products\");\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data})\r\n\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n    \r\n}\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) =>{\r\n    try {\r\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\r\n        const {userSignin:{userInfo}} = getState();\r\n        if (!product._id){\r\n            const {data} = await Axios.post('/api/products', product, {\r\n                headers:{\r\n                    'Authorization': 'Bearer ' + userInfo.token\r\n                }\r\n            });\r\n            dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n        }\r\n        else{\r\n            const {data} = await Axios.put('/api/products/' + product._id, product, {\r\n                headers:{\r\n                    'Authorization': 'Bearer ' + userInfo.token\r\n                }\r\n            });\r\n            dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n        }\r\n        \r\n        \r\n    \r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\r\n        const {data} = await axios.get(\"/api/products/\"+ productId);\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n    }\r\n    catch (error) {\r\n        dispatch({type:PRODUCT_DETAILS_FAIL, payload: error.message });\r\n    }\r\n}\r\nconst deleteProduct = (productId) => async (dispatch, getState) => {\r\n    try {\r\n        const { userSignin:{userInfo}} = getState();\r\n        dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\r\n        const {data} = await axios.delete(\"/api/products/\"+ productId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + userInfo.token\r\n            }\r\n        });\r\n        dispatch({type: PRODUCT_DELETE_SUCCESS, payload: data, success:true});\r\n    }\r\n    catch (error) {\r\n        dispatch({type:PRODUCT_DELETE_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\n\r\nexport {listProducts, detailsProduct, saveProduct, deleteProduct}"]},"metadata":{},"sourceType":"module"}