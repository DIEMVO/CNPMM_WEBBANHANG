{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_SUCCESS } from \"../constants/productConstants\";\nimport Axios from \"axios\";\nimport { PRODUCT_DELETE_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_FAIL } from './../constants/productConstants';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await Axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await Axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\n\nconst deleteProduct = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await Axios.delete(\"/api/products/\" + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/HOC/Nam4-KH1/CongNghePhanMemMoi/GitHub/CNPMM_WEBBANHANG/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_SUCCESS","Axios","PRODUCT_DELETE_SUCCESS","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_FAIL","listProducts","dispatch","type","data","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","deleteProduct","delete","success"],"mappings":"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","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n     PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_SUCCESS } from \"../constants/productConstants\"\r\nimport Axios from \"axios\";\r\nimport { PRODUCT_DELETE_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_FAIL } from './../constants/productConstants';\r\nconst listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST});\r\n        const {data} = await Axios.get(\"/api/products\");\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data})\r\n\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n      const { data } = await Axios.get(\"/api/products/\" + productId);\r\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.post(\r\n        '/api/products',\r\n        {},\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data.product,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\nconst deleteProduct = (productId) => async (dispatch, getState) => {\r\n    try {\r\n        const { userSignin:{userInfo}} = getState();\r\n        dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\r\n        const {data} = await Axios.delete(\"/api/products/\"+ productId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + userInfo.token\r\n            }\r\n        });\r\n        dispatch({type: PRODUCT_DELETE_SUCCESS, payload: data, success:true});\r\n    }\r\n    catch (error) {\r\n        dispatch({type:PRODUCT_DELETE_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}