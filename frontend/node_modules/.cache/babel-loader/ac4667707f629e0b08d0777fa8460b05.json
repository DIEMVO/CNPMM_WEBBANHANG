{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\HOC\\\\Nam4-KH1\\\\CongNghePhanMemMoi\\\\GitHub\\\\CNPMM_WEBBANHANG\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { detailsUser } from '../actions/userActions';\nimport LoadingBox from './../components/LoadingBox';\nimport MessageBox from './../components/MessageBox';\nimport { updateUserProfile } from './../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nexport default function ProfileScreen() {\n  _s();\n\n  //to update profile\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdateProfile;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch update profile\n\n    if (password !== confirmPassword) {\n      alert('Password and Confirm Password are not matched!');\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 31\n        }, this), successUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"success\",\n          children: \"Updated Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Enter confirm password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProfileScreen, \"ig/X2LYQ+R2EikOWNX9FWqlV6CY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/HOC/Nam4-KH1/CongNghePhanMemMoi/GitHub/CNPMM_WEBBANHANG/frontend/src/screens/ProfileScreen.js"],"names":["React","useSelector","useDispatch","useEffect","useState","detailsUser","LoadingBox","MessageBox","updateUserProfile","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","success","successUpdate","errorUpdate","loadingUpdate","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { detailsUser } from '../actions/userActions';\r\nimport LoadingBox from './../components/LoadingBox';\r\nimport MessageBox from './../components/MessageBox';\r\nimport { updateUserProfile } from './../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nexport default function ProfileScreen() {\r\n    //to update profile\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n    const {success: successUpdate, error: errorUpdate, loading: loadingUpdate} = userUpdateProfile;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      if (!user) {\r\n        dispatch({type: USER_UPDATE_PROFILE_RESET});\r\n        dispatch(detailsUser(userInfo._id));\r\n      }\r\n      else{\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n      \r\n    }, [dispatch, userInfo._id, user]);\r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      // dispatch update profile\r\n      if (password !== confirmPassword){\r\n          alert('Password and Confirm Password are not matched!');\r\n      } else{\r\n          dispatch(updateUserProfile({userId: user._id, name, email, password}));\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <form className=\"form\" onSubmit={submitHandler}>\r\n          <div>\r\n            <h1>User Profile</h1>\r\n          </div>\r\n          {loading ? (\r\n            <LoadingBox></LoadingBox>\r\n          ) : error ? (\r\n            <MessageBox variant=\"danger\">{error}</MessageBox>\r\n          ) : (\r\n            <>\r\n              {loadingUpdate && <LoadingBox></LoadingBox>}\r\n              {errorUpdate && <MessageBox variant=\"danger\"></MessageBox>}\r\n              {successUpdate && (\r\n                <MessageBox variant=\"success\">Updated Success</MessageBox>\r\n              )}\r\n              <div>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  value={name}\r\n                  onChange={e => setName(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={e => setEmail(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={e => setPassword(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"confirmPassword\">confirm Password</label>\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter confirm password\"\r\n                  onChange={e => setConfirmPassword(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <label />\r\n                <button className=\"primary\" type=\"submit\">\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  } "]},"metadata":{},"sourceType":"module"}